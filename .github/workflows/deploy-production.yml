name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# evita dois deploys concorrentes para o mesmo ambiente
concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production   # usa o ambiente "production" do GitHub (opcional, mas recomendado)
    steps:
      - name: Checkout (full history p/ m√©tricas)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # importante para ferramentas que calculam lead time (hist√≥rico completo)

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build (Production)
        run: npm run build

      - name: Test
        run: npm test -- --watchAll=false --ci

      # --- DEPLOY TO VERCEL ---
      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      # --- SLEUTH NOTIFY ---
      # Usa a action oficial do Sleuth que funciona corretamente
      - name: Notify Sleuth
        if: ${{ success() && steps.deploy.outcome == 'success' && secrets.SLEUTH_API_KEY != '' }}
        uses: sleuth-io/sleuth-pr-action@v1.0.0
        with:
          api-key: ${{ secrets.SLEUTH_API_KEY }}
          environment: production
        continue-on-error: true
      
      # Fallback: notifica√ß√£o manual se a action falhar
      - name: Notify Sleuth (Manual)
        if: ${{ success() && steps.deploy.outcome == 'success' && secrets.SLEUTH_API_KEY != '' }}
        run: |
          echo "üîî Tentando notifica√ß√£o manual do Sleuth..."
          echo "üìä SHA: ${{ github.sha }}"
          echo "üåê Repo: ${{ github.repository }}"
          
          # Usar o endpoint correto do Sleuth
          curl -X POST "https://app.sleuth.io/api/1/deployments/${{ github.repository }}/register_deploy" \
            -H "Authorization: Bearer ${{ secrets.SLEUTH_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "sha": "${{ github.sha }}",
              "environment": "production"
            }' || echo "‚ö†Ô∏è Notifica√ß√£o manual tamb√©m falhou"
        continue-on-error: true
      
      # Log de deploy bem-sucedido mesmo sem Sleuth
      - name: Deploy Success
        if: ${{ success() && steps.deploy.outcome == 'success' }}
        run: |
          echo "üéâ Deploy realizado com sucesso!"
          echo "üìä Para m√©tricas DORA, configure SLEUTH_API_KEY nos secrets"

