name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# evita dois deploys concorrentes para o mesmo ambiente
concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production   # usa o ambiente "production" do GitHub (opcional, mas recomendado)
    steps:
      - name: Checkout (full history p/ métricas)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # importante para ferramentas que calculam lead time (histórico completo)

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build (Production)
        run: npm run build

      - name: Test
        run: npm test -- --watchAll=false --ci

      # --- DEPLOY TO VERCEL ---
      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      # --- SLEUTH NOTIFY ---
      # Só notifica se o deploy tiver sido bem-sucedido
      - name: Notify Sleuth
        if: ${{ success() && steps.deploy.outcome == 'success' }}
        uses: sleuth-io/sleuth-action@v1
        with:
          api_key: ${{ secrets.SLEUTH_API_KEY }}   # crie esse secret no repo/org
          environment: production                  # precisa bater com o ambiente definido no Sleuth
          # opcional, mas útil:
          revision: ${{ github.sha }}
          repo: ${{ github.repository }}
          # deployed_at: ${{ github.event.head_commit.timestamp }}

